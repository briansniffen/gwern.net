# Personal

- [Darcs](!Wikipedia) repository for personal configs: `darcs get --lazy http://www.gwern.net/home/gwern/`
- Darcs repository for this site: `darcs get --lazy http://www.gwern.net/`
- [Reddit](http://www.reddit.com/user/gwern/)
- [LessWrong.com](http://lesswrong.com/user/gwern)
- [PredictionBook](http://predictionbook.com/users/gwern)
- [Google](http://www.google.com/profiles/gwern0) (Reader & Buzz)
- [Slashdot](http://slashdot.org/~gwern/)
- [LastFM (music)](http://www.last.fm/user/gwern)
- [BookMooch](http://en.wikipedia.org/wiki/BookMooch) [profile](http://www.bookmooch.com/m/bio/wan)
- [Dragon Go]http://www.dragongoserver.net/faq.php?read=t&cat=all() [profile](http://www.dragongoserver.net/userinfo.php?uid=53846) ([turn-based Go](http://senseis.xmp.net/?TurnBasedGoServer); may need to be logged in to see my profile)

(I have nothing to do with the gwern on MySpace or with gwern.com.)

# Contact

- <gwern0@gmail.com>
- [PGP key](http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xF7E5D682):

<pre>
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v2.0.3 (GNU/Linux)

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
=cLiW
-----END PGP PUBLIC KEY BLOCK-----
</pre>

# Wikis

I have been active on Wikipedia and related projects since January 2004. Cumulatively[^sock], I have over 90,000 edits and have written or worked on [hundreds of articles](Wikipedia resume); during my time as an administrator, I performed thousands of administrative actions; I am an admin on the Haskell wiki.

- [English Wikipedia](http://en.wikipedia.org/wiki/User:Gwern)
- [English Wikibooks](http://en.wikibooks.org/wiki/User:Gwern)
- [Haskell wiki](http://haskell.org/haskellwiki/User:Gwern)

I also run a [custom Google search tool](!Wikipedia "Google Co-op") at ["Wikipedia RSs for anime & manga"](http://www.google.com/cse/home?cx=009114923999563836576:1eorkzz2gp4); this is a custom Google search with >1800 websites on its [black](!Wikipedia "Blacklist (computing)")  and [whitelist](!Wikipedia)s. It returns much more useful^[Compare the [CSE results](http://www.google.com/cse?cx=009114923999563836576%3A1eorkzz2gp4&q=Wings+of+Honneamise) with the [Google Results](http://www.google.com/search?q=Wings+of+Honneamise) for the anime _[Wings of HonnÃªamise](!Wikipedia)_. Which is more useful for an editor?] results for topics in popular culture, and as the name suggests, anime & manga in particular.

# Mailing lists

- [Haskell-cafe](http://www.google.com/search?q=gwern+site%3Ahttp%3A%2F%2Fwww.haskell.org%2Fpipermail%2Fhaskell-cafe%2F)
- [XMonad](http://www.google.com/search?q=gwern+site%3Ahttp%3A%2F%2Fwww.haskell.org%2Fpipermail%2Fxmonad%2F)
- [Yi](http://groups.google.com/group/yi-devel/search?group=yi-devel&q=gwern)
- [Haskell libraries](http://www.google.com/search?q=gwern+site%3Ahttp%3A%2F%2Fwww.haskell.org%2Fpipermail%2Flibraries%2F)
- [SL4](http://www.google.com/search?q=gwern+site%3Ahttp%3A%2F%2Fwww.sl4.org%2Farchive%2F)
- [Urth](http://www.google.com/search?q=gwern+site%3Aurth.net)


# Collaboration style

I am not a bad Haskell programmer (although I am no guru like Simon Peyton-Jones, Apfelmus, or Don Stewart), but given how long I've been using Haskell, my contributions probably look pretty slim.

This is partly because of my style of contribution. I've always preferred to work on existing applications and libraries than to go write my own. I've always preferred to take someone else's work and bring it up to snuff than write a clean implementation of my own. I've always preferred prodding the author or maintainer to do the right thing than to drop a large batch of patches onto them. Likewise, I view it as superior to use Haskell standards like Cabal or Darcs than to use something like Autotools even if the latter lets us manage just a little more automation. I view it as superior to upload to [Hackage](http://hackage.haskell.org/) than to use any fancy site like [Github](!Wikipedia) or [Sourceforge](!Wikipedia).

It's better to do yeoman's work taking two similar modules in two applications and split them out to a library than to write even the fanciest [purely functional](!Wikipedia) [finger-tree](!Wikipedia) using [monoids](!Wikipedia). Better to commit changes that reduce user configs by a line than to demonstrate once again the elegance of monads. Better by far to file a bug than wank around in [#haskell](irc://irc.freenode.net#haskell) [golfing](!Wikipedia "code golf") expressions.

It is much better to find some people who have tried in the past to solve a problem and bring them together to solve it, than to solve it yourself - even if it means being a footnote (or less) in the announcement. What's important is that it got done, and people will be using it. Not the credit. It is a high accomplishment indeed to factor out a bit of functionality into a library and make every possible user actually use it. Would that more Haskellers had this mindset!

This is an ethos I learned working with the [inclusionists](!MetaWikiPedia "inclusionism") of Wikipedia. No code is so bad that it contains no good; the most valuable code is that used by other code; credit is less important than work; a steady stream of small trivial improvements is superior to occasional massive edits.

> "A leader is best when people barely know that he exists, not so good when people obey and acclaim him, worst when they despise him. Fail to honor people, They fail to honor you. But of a good leader, who talks little, when his work is done, his aims fulfilled, they will all say, 'We did this ourselves.'[^tao]

This is not an ethos calculated to impress. Filing bug reports, helping newbies, commenting on articles and code, cabalizing & uploading code - these are things hard to evaluate or take credit for. They are useful, useful indeed (shepheb or, eg. myself, never boast in <irc://irc.freenode.net/xmonad> of having helped 5 newbies today, but over the months and years, this friendliness and ready aid is of greater value than any module in all of XMonadContrib.) but they will never impress an interviewer or earn a fellowship. Is that too bad? Did I waste all my time?

I don't think so. I value my contributions, and the Haskell community is better for it. It may have made my life a little more difficult - all that time spent on Haskell matters is time I did not devote to classes or jobs or what-have-you - but ultimately they did help somebody. One could do worse things with one's time than that.

# Coding contributions

I mostly contribute to projects in Haskell, my favorite language; I have contributed to non-Haskell projects such as [StumpWM](!Wikipedia), [Mnemosyne](!Wikipedia "Mnemosyne (software)"), [GNU Emacs](!Wikipedia)[^emacs] etc. but not in major ways, so I do not list them here:

#### Darcs

#. Switched from FastPackedStrings to ByteStrings
#. Low-level C optimization
#. Initiated Cabalization
#. Refactoring of shell tests
#. Initiated switch from [MoinMoin](!Wikipedia) wiki to Gitit
#. Identified performance issue & instigated addition of `--max-count` option for Filestore

#### XMonad
#. Contributed modules:
    i. XMonad.Util.Paste
    ii. XMonad.Actions.Search
    iii. XMonad.Actions.WindowGo
    iv. XMonad.Util.XSelection
#. Maintain previous[^commit]

#### Yi
#. Contributed modules:
    i. Yi.IReader
    ii. Yi.Mode.IReader
    iii. Yi.Hoogle
#. Improved Emacs keybindings
#. Initiated 'Unicodify' or 'Pretty Lambdas' feature for Haskell syntax highlighting
#. Added movement-related functions for improved incremental search
#. Cleanup[^clean]
#. Comment support to cabal-mode

#### Lambdabot
#. (Re)Cabalized[^cabalized]
#. Adapted to use Mueval
#. Refactored out code in multiple packages:
    i. show
    ii. lambdabot-utils
    iii. brainfuck
    iv. unlambda
#. Implemented run-in-any-directory functionality (previously Lambdabot could only run in the repository directory)
#. Cleanup
#. Maintain it (with Cale Gibbard)

#### Gitit
- Wrote Darcs backend (which was moved to the filestore package and became Data.FileStore.Darcs)
- Did some optimization work (images, JavaScript & CSS minification, wrote gzip encoding & initiated expire headers, JS relocation, fewer calls to expensive filestore functions)
- Wrote Interwiki plugin
- Wrote Date plugin
- Wrote WebArchiver plugin
- Wrote Unicode plugin
- Wrote HCAR entry
- Misc. bug reports & suggestions
- Prototyped RSS support
- Added PDF export functionality

##### Filestore
- Instigated its development/use in Gitit & [Orchid](http://hackage.haskell.org/cgi-bin/hackage-scripts/package/orchid)
- Maintain the Darcs backend (debug & optimize)

#### Mueval
- Wrote and maintain it

#### wp-archivebot
- Wrote and maintain it (see <http://www.haskell.org/pipermail/haskell/2009-June/021388.html>)

#### Base libraries
##### Base
- Added Control.Monad.void
- Helped replace Data.List.sort with YHC's more efficient implementation (see <http://hackage.haskell.org/trac/ghc/ticket/2143>)

##### Unix
- fixed a possible runtime crash in `mkstemp`
- added `mkstemp` docs

#### Change-monger
- Wrote and maintain it

#### Autoproc
- Cleanup
- Improved basic functionality
- Implemented an XMonad-style reload system to allow actual customization
- Maintain it

#### Frag
- Updated for GHC 6.8.x & 6.10[^ghc]
- Cleanup
- Replaced the non-Free level data and graphics with Free ones

#### HalFS
- Updated
- Improved cabalization

### Shu-thing, Monadius
- Linux portability fixes
- Cabalized
- Cleanup

### Hint
- Improved examples, docs
- Added UTF8 support
- Made use ghc-paths library
- Enabled QuickCheck support
- Added GHC-options support

## Hlint
- added GHCi integration

### Pugs
- Cleaned up their third-party modules
- Fixed up various Cabal issues
- Helped maintain it

### ZFS
- Cabalized
- Cleanup

### Greencard
- Updated
- Cabalized & did the package split

### ArrayRef
- Cabalized
- Cleanup
- Updated

### Hashell
- Updated for 6.8's GHC API
- Cleanup
- Cabalized

### QuickCheck
- Prototyped the Data.Complex instance

### GenI
- Improved Cabalization

### HArchive
- Cabalized

### HaLeX
- Cabalized

### HTF
- Cabalized

### PArrows
- Cabalized

### Baskell
- Cabalized

### Mage
- Cabalized
- Cleanup

### Haskell In Space
- Cabalized
- Cleanup
- Updated

### Smallcheck
- Cabalized

### Topkata
- Improved Cabalization

### HsSyck
- ByteString updates
- Improved cabalization

### HList
- Updated
- Cabalized

### flow2dot
- Updated

### hinvaders
- Cabalized
- Updated

### Whim
- Cabalized whim

### Tagsoup
- replaced old custom HTTP download code with standard library functions

[^emacs]: For example, my clean up and extension of the browse-url module was completely rewritten by [RMS](!Wikipedia "Richard Stallman") - so I can hardly take credit there.
[^clean]: Henceforth, 'cleanup' should be taken as referring to extensive miscellaneous changes which include (in no particular order):

    - fixing GHC's <tt>-Wall</tt> or hlint warnings
    - replacing OPTION pragmas with LANGUAGE pragmas
    - tracking down licensing information
    - switching from Haskell98 imports to the standard hierarchical module imports
        i. eg. <tt>import Char</tt> -> <tt>import Data.Char</tt>; nontrivial in some cases where Haskell98 modules were dispersed
    - reorganizing the file tree
    - improving the Cabalization
    - whitespace formatting, and so on.

[^cabalized]: Henceforth, this typically implies that I uploaded it to Hackage as well
[^ghc]: Henceforth, this implies that I made whatever changes necessary to get it compiling on GHC 6.8.x and 6.10.x
[^commit]: Henceforth, this implies I have a commit-bit (or equivalent) for that project.
[^sock]: That is, summing up the (surviving) edits of my various accounts over the years: [User:Gwern](!Wikipedia), [User:Marudubshinki](!Wikipedia), & [User:Rhwawn](!Wikipedia)
[^tao]: [Chapter 17, _Tao Teh Ching_](!Wikiquote "Tao_Te_Ching"); ([alternate translation](!Wikisource "Laozi (Wikisource translation)#Chapter_17"))