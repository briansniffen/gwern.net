# XMonad vs. Awesome

## pros

22:51:58 < jrick> in awesome, tabs are provided through a lua library called Tabulous. unfortunately, you can't have a "tab titlebar" at the
                  top, so you don't know what other windows are in that group

in awesome, if you break your configuration and reload, nothing loads up
in XMonad, it just won't compile and you can continue using the old one

awesome config file keeps changing

awesome has many dependencies

awesome is less reliable than XMonad, which hardly ever crashes

awesome is GPL against XMonad's BSD

## cons

XMonad users have to setup third-party statusbars like dzen, while awesome has a statusbar built in (this is related to the dependencies)

XMonad uses virtual desktop model by default, while awesome uses tags; XMonad has tag extensions, though

awesome statusbar apparently can embed Lua applications in it; eg. a (small) clone of Space Invaders

non-issues

awesome uses XCB and XMonad Xlib; any speed advantage is unnoticeable by the user and swamped by just about anything else (like app rendering)
XMonad requires learning at least a little haskell syntax; awesome requires Lua knowledge, but this may be more accessible

# XMonad vs. StumpWM

## pros

live hacking means you can hose your X session

minimal type safety - try and pray?

XMonad being compiled means easier and more reliable setup than StumpWM - interpreter setup can be tricky

XMonad has smaller binaries and uses less memory than a SBCL with StumpWM loaded; this leads to noticeable performance differences on RAM-limited systems

## cons

XMonad cannot really do live hacking

different paradigms; possible to do static tiling in XMonad, but not nearly as easy as with StumpWM