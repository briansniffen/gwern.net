> "Most people find the concept of programming obvious, but the doing impossible."^[Alan J. Perlis, ["Epigrams in Programming"](http://www.cs.yale.edu/quotes.html)]

One of the most fruitful areas of computing is making up for human frailties. They do arithmetic perfectly because we can't^["One does not learn computing by using a hand calculator, but one can forget arithmetic." Perlis, _ibid._]. They remember terabytes because we'd forget. They make the best calendars, because they always check what there is to do today.

We use any number of such neuroprosthetics, but there are always more to be discovered. They're worth looking for because they are so valuable: a shovel is much more effective than your hand, but a [power shovel](!Wikipedia) is orders of magnitude better than both - even if it requires training and expertise to use.

# Spacing effect

My current favorite prosthesis is the class of software that exploits the [spacing effect](!Wikipedia), a centuries-old observation in cognitive psychology, to acheive results in studying or memorization much better than conventional student techniques.

The spacing effect essentially says that if you have a question ("What is the fifth letter in this random sequence you learned?"), and you can only study it, say, 5 times, then your memory of the answer ('e') will be strongest if you spread your 5 tries out over a long period of time - days, weeks, and months. One of the worst things you can do is blow your 5 tries within a day or two. You can think of the 'forgetting curve' as being like a chart of radioactive half-lives: each review bumps your memory up in strength 50% of the chart, say, but review doesn't do very much in the early days because the memory simply hasn't decayed very much!^[For a graphical representation of this sawtooth effect, see [page 2](http://www.wired.com/medtech/health/magazine/16-05/ff_wozniak?currentPage=2) of Wolf 2008.]

## If you're so good...
Of course, the latter strategy (cramming) is precisely what students do. They cram the night before the test, and a month later can't remember anything. So why do people do it? (I'm not innocent myself.) 

Because it does work, sort of. Cramming is a trade-off: you trade a strong memory now for no memory later. And tests are usually of all the new material, with only occasional old questions, so this strategy pays off! That's the damnable thing about it - its memory longevity & quality are, in sum, less than that of spaced repetition, but cramming delivers its goods *now*. So cramming is a rational, if short-sighted, response.

That explains why it's an uncommon studying technique: the pay-off is long-term and unobvious. It doesn't help that it's pretty difficult to figure out *when* one should review - the optimal point is when you're just about to forget about it, but that's the kicker: if you're just about to forget about it, how are you supposed to remember to review it? You only remember to review what you remember, and what you already remember isn't what you need to review![^wired1]

The paradox is resolved by letting a computer handle all the calculations. We can thank Ebbinghaus for investigating in such tedious detail than we can, in fact, program a computer to calculate both the forgetting curve and optimal set of reviews^["Make no mistake about it: Computers process numbers - not symbols. We measure our understanding (and control) by the extent to which we can arithmetize an activity." Perlis, _ibid._]. This is the insight behind [spaced repetition](!Wikipedia) software: ask the same question over and over, but over increasing spans of time. You start with asking it once every few days, and soon the human remembers it reasonably well. Then you expand intervals out to weeks, then months, and then years. Once the memory is formed and dispatched to long-term memory, it only needs occasional exercise to remain hale and hearty^[this exponential expansion is how a SR program can handle constant input: obviously if it scheduled at fixed intervals, like every other day, it would soon become quite impossible - I have 8000 items in Mnemosyne, but I don't have time to review 4000 questions a day!] - I remember well the large dinosaurs made of cardboard for my 4^th^ or 5^th^ birthday, or the tunnel made out of boxes, even though I remember them once or twice a year at most. 

## Using it
One doesn't need to use SuperMemo, of course; there are plenty of free alternatives. I like [Mnemosyne](!Wikipedia "Mnemosyne (software)")[](http://www.mnemosyne-proj.org/) myself - Free, packaged for Ubuntu Linux, and quite easy to use.

OK, but what does one do with it? It's a suprisingly difficult question, actually. It's akin to "the  tyranny of the blank page" (or blank wiki); now that I have all this power - a mechanical golem that will never forget and never let me forget whatever I chose to - what do I choose to remember?

### Problems
One common experience of new users to spaced repetition is to add too much stuff - trivialities and things they don't really care about. But they soon learn the curse of Funes the Memorious. If they don't actually want to learn the material they put in, they will soon stop doing the daily reviews - which will cause reviews to pile up, which will be further discouraging, and sto they stop. At least with physical fitness there isn't a precisely dismaying number indicating how far behind you are! But if you have too little at the beginning, you'll only have a few repetitions day and you'll see no obvious benefit. 

### What to add
The most difficult task, beyond that of just persisting until the benefits do become obvious, is deciding what's valuable enough to add in. In a 3 year period, one can expect to spend "30-40 seconds"^[["SuperMemo as a new tool increasing the productivity of a programmer. A case study: programming in Object Windows"](http://www.supermemo.com/articles/programming.htm)] on any given item. Over the long term, we might as well call it 5 minutes to learn an item. So that's the informal rule of thumb: if over your lifetime you will spend more than 5 minutes trying to re-find or look something up or will lose more than 5 minutes as a result of not knowing something, then it's worthwhile to add it in. This is the line dividing trivia from useful data.[^memorizing]

I find one of the best uses for Mnemosyne is, besides adding questions relating to class material, to add in words from [A Word A Day](!Wikipedia)^[which neatly addresses the issue of such mailing lists being useless ('who learns a word after just one exposure?').] and [Wiktionary](!Wikipedia), memorable quotes I see^[Mnemosyne in this case constitutes both a way to learn the quotes so I can use them, and a [waste book](!Wikipedia "Notebook (style)")], personal information such as birthdays ^[I could never remember my license plate number until I entered 3 or 4 questions anent't into Mnemosyne.], and so on. Quotidian uses, but valuable. 

### The workload
On average, I add 3 or 4 questions a day, which combined with my particular memory, means I usually must review about 90 or 100 items a day (out of the total 8000). This takes about 20 minutes, which is not too bad. I expect the time is expanded a bit by the fact that early on, my formatting guidelines were still being developed, and I hadn't the full panoply of categories I do not - so every so often in a review I must stop and do some editing. 

# Where was I going with this?

Nowhere, really. Mnemosyne/SR software in general are just one of my favorite tools: it's based on a famous effect[^proudest] discovered by science, and it exploits it very elegantly[^me] and usefully. It's a testament to the Enlightenment ideal of improving humanity through reason and overcoming our human flaws; the idea of SR is seductive in its mathematical rigor[^splendor]. In this age where so often the ideal of 'self-improvement' and progress are deried, and gloom are espoused by even the common people, it's really nice to just have a small example like this in one's daily life, an example not yet so prosaic and boring as the lightbulb.

[^splendor]: See [page 7](http://www.wired.com/medtech/health/magazine/16-05/ff_wozniak?currentPage=7), Wolf 2008

     > "And yet now, as I grin broadly and wave to the gawkers, it occurs to me that the cold rationality of his approach may be only a surface feature and that, when linked to genuine rewards, even the chilliest of systems can have a certain visceral appeal. By projecting the achievement of extreme memory back along the forgetting curve, by provably linking the distant future - when we will know so much - to the few minutes we devote to studying today, Wozniak has found a way to condition his temperament along with his memory. He is making the future noticeable. He is trying not just to learn many things but to warm the process of learning itself with a draft of utopian ecstasy."
[^me]: When I first read of SuperMemo, I had already taken a class in cognitive psychology and was reasonably familiar with Ebbinghaus's forgetting curve - so my reaction to its methodology was Huxley's: "How extremely stupid not to have thought of that!"
[^proudest]: "The spacing effect was one of the proudest lab-derived discoveries, and it was interesting precisely because it was not obvious, even to professional teachers. The same year that Neisser revolted, Robert Bjork, working with Thomas Landauer of Bell Labs, published the results of two experiments involving nearly 700 undergraduate students. Landauer and Bjork were looking for the optimal moment to rehearse something so that it would later be remembered. Their results were impressive: The best time to study something is at the moment you are about to forget it. And yet - as Neisser might have predicted - that insight was useless in the real world." [Page 4](http://www.wired.com/medtech/health/magazine/16-05/ff_wozniak?currentPage=4), Wolf 2008
[^wired1]:  "SuperMemo is based on the insight that there is an ideal moment to practice what you've learned. Practice too soon and you waste your time. Practice too late and you've forgotten the material and have to relearn it. The right time to practice is just at the moment you're about to forget. Unfortunately, this moment is different for every person and each bit of information. Imagine a pile of thousands of flash cards. Somewhere in this pile are the ones you should be practicing right now. Which are they?" Gary Wolf, ["Want to Remember Everything You'll Ever Learn? Surrender to This Algorithm"](http://www.wired.com/medtech/health/magazine/16-05/ff_wozniak), _[Wired Magazine](!Wikipedia)_
[^memorizing]: modulo things where knowing it is useful even if you don't need it very often - it can be a brick in a pyramid of knowledge; cf. [page 3](http://www.wired.com/medtech/health/magazine/16-05/ff_wozniak?currentPage=3) of Wolf:

     > "The problem of forgetting might not torment us so much if we could only convince ourselves that remembering isn't important. Perhaps the things we learn - words, dates, formulas, historical and biographical details - don't really matter. Facts can be looked up. That's what the Internet is for. When it comes to learning, what really matters is how things fit together. We master the stories, the schemas, the frameworks, the paradigms; we rehearse the lingo; we swim in the episteme.<br>
     > The disadvantage of this comforting notion is that it's false. "The people who criticize memorization - how happy would they be to spell out every letter of every word they read?" asks Robert Bjork, chair of UCLA's psychology department and one of the most eminent memory researchers. After all, Bjork notes, children learn to read whole words through intense practice, and every time we enter a new field we become children again. "You can't escape memorization," he says. "There is an initial process of learning the names of things. That's a stage we all go through. It's all the more important to go through it rapidly." The human brain is a marvel of associative processing, but in order to make associations, data must be loaded into memory."
